{{- if .Values.postgresql.enabled }}
{{- include "common.crd.exists" "postgresclusters.postgres-operator.crunchydata.com" }}
---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: {{ include "common.fullname" . }}-{{ .Values.postgresql.clusterName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ .Values.postgresql.clusterName }}
spec:
  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-13.8-0
  postgresVersion: {{ .Values.postgresql.postgresVersion }}
  instances: {{ .Values.postgresql.instances }}
  users:
    {{- toYaml .Values.postgresql.users | nindent 4 }}
  databases:
    {{- toYaml .Values.postgresql.databases | nindent 4 }}
  dataSource:
    postgresCluster:
      name: {{ include "common.fullname" . }}-{{ .Values.postgresql.clusterName }}
  pgBouncer:
    replicas: {{ .Values.postgresql.pgBouncer.replicas }}
    resources:
      {{- toYaml .Values.postgresql.pgBouncer.resources | nindent 6 }}
  backups:
    pgbackrest:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.38-0
      repos:
      - name: repo1
        volume:
          volumeClaimSpec:
            accessModes:
            - "ReadWriteOnce"
            resources:
              requests:
                storage: {{ .Values.postgresql.backup.storageSize }}
            {{- if .Values.postgresql.backup.storageClass }}
            storageClassName: {{ .Values.postgresql.backup.storageClass }}
            {{- end }}
        {{- if .Values.postgresql.backup.schedule }}
        schedules:
          full: {{ .Values.postgresql.backup.schedule.full | quote }}
          incremental: {{ .Values.postgresql.backup.schedule.incremental | quote }}
        {{- end }}
      {{- if .Values.postgresql.backup.s3.enabled }}
      - name: repo2
        s3:
          bucket: {{ .Values.postgresql.backup.s3.bucket }}
          region: {{ .Values.postgresql.backup.s3.region }}
          endpoint: {{ .Values.postgresql.backup.s3.endpoint }}
        schedules:
          full: {{ .Values.postgresql.backup.schedule.full | quote }}
          incremental: {{ .Values.postgresql.backup.schedule.incremental | quote }}
      {{- end }}
  proxy:
    pgBouncer:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbouncer:ubi8-1.16-0
  monitoring:
    pgmonitor:
      exporter:
        image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.0.2-0
  patroni:
    dynamicConfiguration:
      postgresql:
        parameters:
          {{- toYaml .Values.postgresql.config | nindent 10 }}
  instances:
    - name: instance1
      dataVolumeClaimSpec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.postgresql.storage.size }}
        {{- if .Values.postgresql.storage.storageClass }}
        storageClassName: {{ .Values.postgresql.storage.storageClass }}
        {{- end }}
      resources:
        {{- toYaml .Values.postgresql.primary.resources | nindent 8 }}
    {{- if gt (int .Values.postgresql.instances) 1 }}
    - name: instance2
      dataVolumeClaimSpec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.postgresql.storage.size }}
        {{- if .Values.postgresql.storage.storageClass }}
        storageClassName: {{ .Values.postgresql.storage.storageClass }}
        {{- end }}
      resources:
        {{- toYaml .Values.postgresql.replica.resources | nindent 8 }}
    {{- end }}

  {{- if .Values.postgresql.pgAdmin.enabled }}
  userInterface:
    pgAdmin:
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgadmin4:ubi8-4.30-0
      replicas: {{ .Values.postgresql.pgAdmin.replicas }}
      resources:
        {{- toYaml .Values.postgresql.pgAdmin.resources | nindent 8 }}
  {{- end }}
{{- end }}
