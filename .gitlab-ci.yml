stages:
  - lint
  - test
  - security
  - package
  - deploy

variables:
  HELM_VERSION: 3.8.0
  OC_VERSION: 4.12.0
  CHART_NAME: common-helm

.helm_setup:
  before_script:
    - apk add --no-cache curl
    - curl -LO https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz
    - tar -zxvf helm-v${HELM_VERSION}-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin/helm
    - helm version

lint:
  stage: lint
  image: alpine:3.14
  extends: .helm_setup
  script:
    - helm lint .
    - helm template . > rendered_templates.yaml
    - cat rendered_templates.yaml

test:
  stage: test
  image: alpine:3.14
  extends: .helm_setup
  script:
    - helm install --dry-run --debug ${CHART_NAME} .

security:
  stage: security
  image: aquasec/trivy:latest
  script:
    - trivy fs --skip-files "configurations/**/*" --format table .

package:
  stage: package
  image: alpine:3.14
  extends: .helm_setup
  script:
    - helm package .
    - helm repo index .
  artifacts:
    paths:
      - '*.tgz'
      - index.yaml

deploy:
  stage: deploy
  image: registry.access.redhat.com/ubi8/ubi-minimal:latest
  before_script:
    - microdnf install -y tar gzip
    - curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OC_VERSION}/openshift-client-linux.tar.gz
    - tar -zxvf openshift-client-linux.tar.gz
    - mv oc /usr/local/bin/oc
    - oc version
  script:
    - oc login --token=${OPENSHIFT_TOKEN} --server=${OPENSHIFT_SERVER} --insecure-skip-tls-verify
    - oc project ${OPENSHIFT_NAMESPACE}
    - helm upgrade --install ${CHART_NAME} . --namespace ${OPENSHIFT_NAMESPACE}
  environment:
    name: development
  when: manual
  only:
    - main